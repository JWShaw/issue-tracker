{
	"info": {
		"_postman_id": "fda8b833-288b-4be9-9c9b-f99c55a4b9b1",
		"name": "Issue Tracker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Create account",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6e7664a0-6ad0-4d4c-8e1b-94398dd987cd",
								"exec": [
									"if (pm.response.code == 201) {",
									"    pm.environment.set('authToken', pm.response.json().token)    ",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Kelvan\",\n    \"email\": \"test@gmail.com\",\n    \"password\": \"chicken\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "377a2d17-2b01-4b2c-a71f-aacff7266c50",
								"exec": [
									"if (pm.response.code == 200) {",
									"    pm.environment.set('authToken', pm.response.json().token)",
									"    pm.environment.set('userID', pm.response.json().user._id) ",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@gmail.com\",\n    \"password\": \"chicken\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get my profile (auth)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users/me",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user profile by id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users/{{userID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"{{userID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Log me out (auth)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"kcjquadrical@gmail.com\",\n    \"password\": \"chicken\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users/logout",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Log me out everywhere (auth)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"tonshaw@shaw.ca\",\n    \"password\": \"chicken\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users/logoutAll",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"logoutAll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update my user info (auth)",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Terry\",\n    \"email\": \"email@email.email\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users/me",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete my account (auth)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/users/me",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"me"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Project",
			"item": [
				{
					"name": "Create project (auth)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "77ee4b85-1fb2-4bd0-9e8a-e8946e323e81",
								"exec": [
									"if (pm.response.code == 201) {\r",
									"    pm.environment.set('projectID', pm.response.json()._id)    \r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Project 1\",\n    \"description\": \"1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/projects",
							"host": [
								"{{url}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get project by id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/projects/{{projectID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"projects",
								"{{projectID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all projects (sorting; pagination)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5937d47a-a91e-4ce2-ba06-7a47aa70a4bf",
								"exec": [
									"if (pm.response.code == 200) {\r",
									"    pm.environment.set('projectID', pm.response.json()[1]._id)    \r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/projects?limit=3&skip=0&sortBy=createdAt:asc",
							"host": [
								"{{url}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "limit",
									"value": "3"
								},
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "sortBy",
									"value": "createdAt:asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update project (auth)",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"My updated project title\",\n    \"description\": \"my updated description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/projects/{{projectID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"projects",
								"{{projectID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete project (auth)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/projects/{{projectID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"projects",
								"{{projectID}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Issue",
			"item": [
				{
					"name": "Create issue (auth)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9650fcbb-e74c-431b-91fa-16fa23b1842a",
								"exec": [
									"if (pm.response.code == 201) {\r",
									"    pm.environment.set('issueID', pm.response.json()._id)    \r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Great Issue\",\n    \"description\": \"Cool\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/projects/{{projectID}}/issues",
							"host": [
								"{{url}}"
							],
							"path": [
								"projects",
								"{{projectID}}",
								"issues"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get issues (sorting; pagination)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "36b90b4b-a368-44b7-bb32-fe3b07c46919",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "965bfcc8-5a44-4b26-b7d2-b17dc075a95b",
								"exec": [
									"if (pm.response.code == 200) {\r",
									"    pm.environment.set('issueID', pm.response.json()[0]._id)    \r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/projects/{{projectID}}/issues?sortBy=createdAt:desc",
							"host": [
								"{{url}}"
							],
							"path": [
								"projects",
								"{{projectID}}",
								"issues"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "createdAt:desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get issue by id",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/projects/{{projectID}}/issues/{{issueID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"projects",
								"{{projectID}}",
								"issues",
								"{{issueID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update issue (auth)",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"completed\": true,\n    \"title\": \"Updated.\",\n    \"description\": \"Also updated.\",\n    \"labels\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/projects/{{projectID}}/issues/{{issueID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"projects",
								"{{projectID}}",
								"issues",
								"{{issueID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete issue (auth)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/projects/{{projectID}}/issues/{{issueID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"projects",
								"{{projectID}}",
								"issues",
								"{{issueID}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Comment",
			"item": [
				{
					"name": "Create comment (auth)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b9d97910-044c-4f05-b726-2cbea7c4f2c2",
								"exec": [
									"if (pm.response.code == 201) {\r",
									"    pm.environment.set('commentID', pm.response.json()._id)    \r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\": \"New Comment\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/projects/{{projectID}}/issues/{{issueID}}/comments",
							"host": [
								"{{url}}"
							],
							"path": [
								"projects",
								"{{projectID}}",
								"issues",
								"{{issueID}}",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get comments (pagination)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05ef38c4-4bd4-4b1b-b01f-454063e7886b",
								"exec": [
									"if (pm.response.code == 200) {\r",
									"    pm.environment.set('commentID', pm.response.json()[0]._id)    \r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/projects/{{projectID}}/issues/{{issueID}}/comments?limit=2&skip=0",
							"host": [
								"{{url}}"
							],
							"path": [
								"projects",
								"{{projectID}}",
								"issues",
								"{{issueID}}",
								"comments"
							],
							"query": [
								{
									"key": "limit",
									"value": "2"
								},
								{
									"key": "skip",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get comment by id",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/projects/{{projectID}}/issues/{{issueID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"projects",
								"{{projectID}}",
								"issues",
								"{{issueID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update comment (auth)",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\": \"Updated Comment Text\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/projects/{{projectID}}/issues/{{issueID}}/comments/{{commentID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"projects",
								"{{projectID}}",
								"issues",
								"{{issueID}}",
								"comments",
								"{{commentID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete comment (auth)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/projects/{{projectID}}/issues/{{issueID}}/comments/{{commentID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"projects",
								"{{projectID}}",
								"issues",
								"{{issueID}}",
								"comments",
								"{{commentID}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Label",
			"item": [
				{
					"name": "Create label (auth)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c1d8e3f-62f2-4725-a738-0748877f087c",
								"exec": [
									"if (pm.response.code == 201) {\r",
									"    pm.environment.set('labelID', pm.response.json()._id)    \r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Label 3\",\n    \"color\": \"Violet\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/projects/{{projectID}}/labels",
							"host": [
								"{{url}}"
							],
							"path": [
								"projects",
								"{{projectID}}",
								"labels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get labels",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/projects/{{projectID}}/labels",
							"host": [
								"{{url}}"
							],
							"path": [
								"projects",
								"{{projectID}}",
								"labels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get label by id",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/projects/{{projectID}}/labels/{{labelID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"projects",
								"{{projectID}}",
								"labels",
								"{{labelID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update label (auth)",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Cooler Label\",\n    \"color\": \"Violet\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/projects/{{projectID}}/labels/{{labelID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"projects",
								"{{projectID}}",
								"labels",
								"{{labelID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete label (auth)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/projects/{{projectID}}/labels/{{labelID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"projects",
								"{{projectID}}",
								"labels",
								"{{labelID}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{authToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "df34bf97-e5d8-4b78-8e3c-6a952415644d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "ed5a20ea-6c25-4955-a94c-d9576c546efe",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}